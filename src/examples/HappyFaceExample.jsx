import { arc } from "d3";
import { nanoid } from "nanoid";


export default function HappyFaceExample() {

    // Define the height and width of the SVG container.
    const scrnHeight   = 350, scrnWidth    = 500;

    // Define the initial x and y coordinates for the face.
    const faceInitialX = 160, faceInitialY = 170;
    
    // Define the radius of the face.
    const faceRadius   = 140;


    // Define a function to render the eyes.
    const renderEyes = () => { 
        
        // Initialize an array to hold the eyes.
        const eyes = [];

        // Loop through the x-coordinates from faceInitialX - 50 to faceInitialX + 100, incrementing by 100 each time.
        for(let x = faceInitialX - 50; x <= faceInitialX + 100; x += 100)
        
            // Push a new eye into the eyes array.
            eyes.push(

                // A group element that contains an eyebrow and an eyeball.
                <g key={nanoid()}>

                    {/* An eyebrow element inside the group. */}
                    <rect

                        // The key of the eyebrow.
                        key={nanoid()}

                        // The class name of the eyebrow for CSS styling.
                        className="eyebrow"

                        // The width of the eyebrow.
                        width={50}

                        // The height of the eyebrow.
                        height={8}

                        // The transformation applied to the eyebrow. It is translated by (x-25, faceInitialY-100) and rotated by a certain angle.
                        transform={`
                            translate(
                                ${x-25} ${faceInitialY-100}
                            )
                            rotate(
                                ${x > faceInitialX ?  x/25 : -x/15}
                            )
                        `}
                    >
                    </rect>

                    {/* An eyeball element inside the group. */}
                    <circle

                        // The key of the eyeball.
                        key={nanoid()}

                        // The class name of the eyeball for CSS styling.
                        className="eyeball"

                        // The x-coordinate of the center of the eyeball.
                        cx={x}

                        // The y-coordinate of the center of the eyeball.
                        cy={faceInitialY-50}

                        // The radius of the eyeball.
                        r={faceRadius/8}
                    >
                    </circle>
                </g>
            );
        
        // Return the array of eyes.
        return eyes;

    }

    // Define a function to render the mouth.
    const renderMouth = () => {

        return(

            // A group element that contains a path.
            <g  transform="translate(162, 165) rotate(90) ">

                {/* A path element inside the group. */}
                <path

                    // The path data of the mouth, generated by the arc function from d3.
                    d={arc()({
                        innerRadius: 93,
                        outerRadius: 100,
                        startAngle: 0,
                        endAngle: Math.PI
                    })}
                >
                </path>
            </g>

        )

    }

    // Return the SVG element.
    return(

        <svg 
            // The height of the SVG container.
            height={scrnHeight} 

            // The width of the SVG container.
            width={scrnWidth}

            // The class name of the SVG container for CSS styling.
            className="happy-face-example" 
        >
            {/* A circle element that represents the face. */}
            <circle

                // The key of the face.
                key={nanoid()}

                // The class name of the face for CSS styling.
                className="happy-face"

                // The x-coordinate of the center of the face.
                cx={faceInitialX}

                // The y-coordinate of the center of the face.
                cy={faceInitialY}

                // The radius of the face.
                r={faceRadius}
            >
            </circle>

            {/* Render the eyes. */}
            {renderEyes()}

            {/* Render the mouth. */}
            {renderMouth()}

        </svg>
        
    );
    
}
