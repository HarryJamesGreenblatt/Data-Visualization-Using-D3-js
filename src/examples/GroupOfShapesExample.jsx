import getRandomColor from "../utils";


export default function GroupOfShapesExample() {

    // Define the height of the SVG container.
    const scrnHeight = 500;

    // Define the starting x-coordinate for the shapes.
    const xStart = 100;

    // Define the starting y-coordinate for the shapes.
    const yStart = 0;

    // Define the radius of the circles.
    const circleRadius = 35;

    // Define the width and height of the rectangles.
    const rectWidth = 50, rectHeight = 50;
     
    // Initialize an array to hold the group elements.
    const groupElements = [];


    // Loop through the y-coordinates from 0 to 500, incrementing by 75 each time.
    for(let y = yStart; y <= 500; y +=75){

         // Push a new group element into the groupElements array.
         groupElements.push(

            // A group element that contains a circle and a rectangle.
            <g 
                // The transformation applied to the group. It is translated by (0, y).
                transform={`translate(0, ${y})`}

                // The fill color of the shapes, generated by the getRandomColor function.
                fill={getRandomColor()}

                // The stroke color of the shapes, generated by the getRandomColor function.
                stroke={getRandomColor()}
            >
                {/* A circle element inside the group. */}
                <circle

                    // The key of the circle.
                    key={y} 

                    // The x-coordinate of the center of the circle.
                    cx={xStart} 
                    
                    // The y-coordinate of the center of the circle.
                    cy={yStart}

                    // The radius of the circle.
                    r={circleRadius}
                >
                </circle>

                {/* A rectangle element inside the group. */}
                <rect

                    // The key of the rectangle.
                    key={y} 

                    // The x-coordinate of the top-left corner of the rectangle.
                    x={xStart + (rectWidth * 1.1)} 

                    // The y-coordinate of the top-left corner of the rectangle.
                    y={yStart - (rectHeight / 2)} 

                    // The width of the rectangle.
                    width={rectWidth} 
                    
                    // The height of the rectangle.
                    height={rectHeight}
                >
                </rect>
            </g>
         )
    }

    // Return the SVG element.
    return(
        <svg height={scrnHeight}>
            {/* Render all the group elements. */}
            { groupElements }
        </svg>
    );
    
}
